<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mm.mapper.AccountMapper" >

	<resultMap id="BaseResultMap" type="org.mm.model.Account" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="encrypted_pwd" property="password" jdbcType="VARCHAR" />
		<result column="role_type" property="roleType" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="BaseColumnList" >
		id, name, mobile, email, encrypted_pwd, role_type, state, created_at, updated_at
	</sql>
	
	<insert id="add" parameterType="org.mm.model.Account" useGeneratedKeys="true" keyProperty="id">
		insert into mm_account (name, mobile, email, encrypted_pwd, role_type, state, created_at, updated_at)
		values(#{name}, #{mobile}, #{email}, #{password}, #{roleType}, #{state}, sysdate(), sysdate())
	</insert>
	
	<select id="update" parameterType="org.mm.model.Account">
		update mm_account set
			name = #{name},
			mobile = #{mobile},
			email = #{email},
			encrypted_pwd = #{password},
			state = #{state},
			updated_at = sysdate()
		where id = #{id}
	</select>
	
	<select id="findByParams" resultMap="BaseResultMap" parameterType="java.util.Map" >
		select
		<include refid="BaseColumnList" />
		from mm_account
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="email != null and email != ''">
				and email = #{email}
			</if>
			<if test="mobile != null and mobile != ''">
				and mobile = #{mobile}
			</if>
		</where>
	</select>
	
</mapper>
