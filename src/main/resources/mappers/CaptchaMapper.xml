<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mm.mapper.CaptchaMapper" >

	<resultMap id="BaseResultMap" type="org.mm.model.Captcha" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="api_key" property="apiKey" jdbcType="VARCHAR" />
		<result column="web_key" property="webKey" jdbcType="VARCHAR" />
		<result column="_key" property="key" jdbcType="VARCHAR" />
		<result column="sec_level" property="secLevel" jdbcType="INTEGER" />
		<result column="sec_mode" property="secMode" jdbcType="INTEGER" />
		<result column="verify_times" property="verifyTimes" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="BaseColumnList" >
		id, api_key, web_key, _key, sec_level, sec_mode, verify_times, state, created_at, updated_at
	</sql>
	
	<insert id="add" parameterType="org.mm.model.Captcha" useGeneratedKeys="true" keyProperty="id">
		insert into mm_captcha (api_key, web_key, _key, sec_level, sec_mode, verify_times, state, created_at, updated_at)
		values(#{apiKey}, #{webKey}, #{key}, #{secLevel}, #{secMode}, #{verifyTimes}, #{state}, sysdate(), sysdate())
	</insert>
	
	<select id="update" parameterType="org.mm.model.Captcha">
		update mm_captcha set
			verify_times = #{verifyTimes},
			state = #{state},
			updated_at = sysdate()
		where
			_key = #{key}
	</select>
	
	<select id="findByParams" resultMap="BaseResultMap" parameterType="java.util.Map" >
		select
		<include refid="BaseColumnList" />
		from mm_captcha
		<where>
			<if test="key != null and key != ''">
				_key = #{key}
			</if>
		</where>
	</select>
	
	<select id="countDate" resultType="java.util.Map">
		select
		<choose>
			<when test="dateType == 0">
				CONCAT(DATE_FORMAT(created_at, '%Y%m%d%H'), FLOOR((DATE_FORMAT(created_at, '%i') + 15) / 15)) as dateNum,
			</when>
			<when test="dateType == 1">
				DATE_FORMAT(created_at, '%Y%m%d%H') as dateNum,
			</when>
			<when test="dateType == 2">
				DATE_FORMAT(created_at, '%Y%m%d%p') as dateNum,
			</when>
			<when test="dateType == 3">
				DATE_FORMAT(created_at, '%Y%m%d') as dateNum,
			</when>
			<when test="dateType == 4">
				DATE_FORMAT(created_at, '%Y%m') as dateNum,
			</when>
			<when test="dateType == 5">
				CONCAT(DATE_FORMAT(created_at, '%Y'), FLOOR((DATE_FORMAT(created_at, '%c') + 2) / 3)) as dateNum,
			</when>
			<when test="dateType == 6">
				DATE_FORMAT(created_at, '%Y') as dateNum,
			</when>
			<otherwise>
				DATE_FORMAT(created_at, #{dateFormat}) as dateNum,
			</otherwise>
		</choose>
		count(id) as `count` from mm_captcha
		<where>
			<if test="webKey != null and webKey != ''">
				web_key = #{webKey}
			</if>
			<if test="timeFrom != null">
				and created_at &gt;= #{timeFrom}
			</if>
			<if test="timeTo != null">
				and created_at &lt; #{timeTo}
			</if>
		</where>
		group by (dateNum)
		order by dateNum
	</select>
	
	<select id="countState" resultType="java.util.Map">
		select state, count(id) as `count`
		from mm_captcha
		<where>
			<if test="webKey != null and webKey != ''">
				web_key = #{webKey}
			</if>
			<if test="timeFrom != null">
				and created_at &gt;= #{timeFrom}
			</if>
			<if test="timeTo != null">
				and created_at &lt; #{timeTo}
			</if>
		</where>
		group by (`state`)
		order by `state`
	</select>
	
</mapper>
